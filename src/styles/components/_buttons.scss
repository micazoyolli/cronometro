@use '../abstracts/variables' as *;

.start,
.pause,
.stop {
  background: -webkit-repeating-linear-gradient(
      0deg,
      rgba(0, 0, 0, 0.3),
      rgba(0, 0, 0, 0.3) 1px,
      transparent 1px,
      transparent 4px
    ) repeat scroll 0 0%,
    -webkit-linear-gradient(
      0deg,
      $color-display-line,
      $color-font-light 7%,
      #aaaaaa 32%,
      #b9b9bb 50%,
      $color-background 74%,
      #8e8e8e
    );
  box-shadow: $shadow-main;
  display: block;
  height: 35px;
  left: 50%;
  margin-left: $margin-left-btn;
  position: absolute;
  top: -66px;
  width: 51px;
  z-index: 13;

  &::before {
    background: -webkit-linear-gradient(
      0deg,
      $color-display-line,
      $color-font-light 7%,
      #aaaaaa 32%,
      #b9b9bb 50%,
      $color-background 74%,
      #8e8e8e
    );
    content: '';
    display: block;
    height: 27px;
    left: 10px;
    position: absolute;
    top: 35px;
    width: 31px;
    z-index: -1;
  }

  &:active {
    top: -55px;

    &::after {
      content: '';
      height: 15px;
      left: 0;
      position: absolute;
      top: -15px;
      width: 30px;
    }

    &::before {
      height: 16px;
    }
  }
}

.pause {
  display: none;
}

.start:target {
  display: none;

  + .pause {
    display: block;
  }
}

.stop {
  background: -webkit-linear-gradient(
    0deg,
    #eaeaea,
    #fefefe 7%,
    #aaaaaa 32%,
    #bababc 50%,
    $color-background 74%,
    #9e9e9e
  );
  height: 25px;
  left: 10px;
  margin: 0;
  top: 0;
  transform: rotate(-41deg);
  width: 35px;

  &::before {
    height: 15px;
    left: 7px;
    top: 25px;
    width: 21px;
  }

  &:active {
    left: 13px;
    top: 4px;

    &::after {
      content: '';
      height: 10px;
      left: 0;
      position: absolute;
      top: -10px;
      width: 30px;
    }

    &::before {
      height: 10px;
      left: 7px;
    }
  }
}

/* Activaci√≥n de animaciones */
.start:target,
.pause:target {
  ~ .timer-inner {
    .numb {
      animation-name: timer;

      &.arrow {
        animation-name: timerArrow;
      }

      &.sec {
        animation-name: timer;
      }

      &.tenSec {
        animation-name: timerTenSec;
      }

      &.min {
        animation-name: timerMin;
      }

      &.tenMin {
        animation-name: timerTenMin;
      }

      &.hour {
        animation-name: timerHour;
      }

      &.tenHour {
        animation-name: timerTenHour;
      }
    }
  }
}

.pause:target {
  ~ .timer-inner {
    .arrow,
    .tenHour,
    .hour,
    .tenMin,
    .min,
    .tenSec,
    .sec,
    .tenMilisec,
    .milisec {
      animation-play-state: paused;
    }
  }
}

.stop:target {
  ~ .timer {
    .tenHour,
    .hour,
    .tenMin,
    .min,
    .tenSec,
    .sec,
    .tenMilisec,
    .milisec {
      animation-name: reset;
    }
  }
}

.start:target ~ .timer-inner .timer-face .clock .arrow {
  animation-name: timerArrow;
  animation-duration: 60s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

.pause:target ~ .timer-inner .timer-face .clock .arrow {
  animation-name: timerArrow;
  animation-duration: 60s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-play-state: paused;
}

@media (max-width: 768px) {
  .start,
  .pause,
  .stop {
    transform: scale(0.8);
  }
}
